int putchar(int a);
int printf(char[] pattern,int a);
int scanf(char[] pattern,int[] a);
int readInt(){
    char[5] p;
    int[1] scanfRes;
    p[0] = 37;
    p[1] = 100;
    p[2] = 0; 
    scanf(p,scanfRes);
    return scanfRes[0];
}
int printInt(int x) {
    char[5] p;
    p[0] = 37;
    p[1] = 100;
    p[2] = 0;
    printf(p,x);
    return 0;
}

int QuickSort(int[] arr, int low, int high)
{
    int i; 
    int j; 
    int k;
    i = low;
    j = high;
    k = arr[low];
    if (low < high)
    {
        while (i < j)
        {
            while(i < j )    
            {
                j=j-1;
            }
 
            if(i < j)
            {
                arr[i] = arr[j];
                i = i+1;
            }
 
            while(i < j )      
            {
                i=i+1;
            }
 
            if(i < j)
            {
                arr[j] = arr[i];
                j = j-1;
            }
        }
 
        arr[i] = k;
 
        QuickSort(arr, low, i - 1);     
        QuickSort(arr, i + 1, high);   
    }
    return 0;
}

int main()
{   
    int a = 101;
    int n;
    int[10000] arr;
    int i = 0,j =0 ;

    if(a >n){
        printInt(74);
    }

    n = readInt();
    i = 0;
    while (i<n) {
        arr[i] = readInt();
        i = i+1;
    }
    
    i =1;
    while ( i<n){
        j=0;
        while(j<n-i){
            if(arr[j] > arr[j+1]){
                a = arr[j];
                arr[j] =arr[j+1];
                arr[j+1] = a;
            }
            j=j+1;
        }
        i = i+1;
    }

    i = 0;
    while (i<n) {
        printInt(arr[i]);
        putchar(10);
        i = i+1;
    }

    return 0;
}
